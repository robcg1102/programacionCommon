{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Container from \"../components/Container\";\nimport Cards from \"../components/Cards\";\nimport Pagination from \"../components/Pagination\";\nimport SearchInput from \"../components/SearchInput\";\nimport Global from \"../services/Global\";\nimport axios from \"axios\";\n\nconst Characters = props => {\n  const {\n    info,\n    results\n  } = props.allres;\n  return /*#__PURE__*/_jsxs(Container, {\n    title: \"Characters\",\n    children: [/*#__PURE__*/_jsx(SearchInput, {}), /*#__PURE__*/_jsx(Cards, {\n      results: results,\n      route: \"characters\"\n    }), /*#__PURE__*/_jsx(Pagination, {\n      next: info.next,\n      prev: info.prev,\n      route: \"characters\"\n    })]\n  });\n};\n\nCharacters.getInitialProps = async ctx => {\n  const {\n    page\n  } = ctx.query;\n\n  try {\n    if (ctx.query.page) {\n      const res = await axios.get(`${Global.url}character?page=${page}`);\n      const resultsData = res.data;\n      return {\n        allres: resultsData\n      };\n    } else {\n      const res = await axios.get(`${Global.url}character`);\n      const resultsData = res.data;\n      return {\n        allres: resultsData\n      };\n    }\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};\n\nexport default Characters;","map":null,"metadata":{},"sourceType":"module"}