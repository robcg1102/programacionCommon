{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Container from \"../components/Container\";\nimport Cards from \"../components/Cards\";\nimport SearchInput from \"../components/SearchInput\";\nimport { useRouter } from \"next/router\";\nimport Global from \"../services/Global\";\nimport axios from \"axios\";\n\nconst SearchCharacter = props => {\n  const router = useRouter();\n\n  if (props.allres) {\n    var {\n      results\n    } = props.allres;\n  }\n\n  return /*#__PURE__*/_jsxs(Container, {\n    title: \"Search Results\",\n    children: [/*#__PURE__*/_jsx(SearchInput, {}), results && /*#__PURE__*/_jsx(Cards, {\n      results: results,\n      route: \"characters\"\n    }), !results && /*#__PURE__*/_jsxs(\"h2\", {\n      className: \"p-5\",\n      children: [\"Not results with: \", /*#__PURE__*/_jsx(\"b\", {\n        children: router.query.name\n      })]\n    })]\n  });\n};\n\nSearchCharacter.getInitialProps = async ctx => {\n  const {\n    name\n  } = ctx.query;\n\n  try {\n    const res = await axios.get(`${Global.url}character/?name=${name}`);\n    const resultsData = res.data;\n    return {\n      allres: resultsData\n    };\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};\n\nexport default SearchCharacter;","map":null,"metadata":{},"sourceType":"module"}