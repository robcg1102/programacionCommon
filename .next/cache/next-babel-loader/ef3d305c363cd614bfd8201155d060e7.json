{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\rickmorty\\\\pages\\\\characters\\\\[id].js\";\nimport { useRouter } from \"next/router\";\nimport Container from \"../../components/Container\";\nimport Global from \"../../services/Global\";\nimport axios from \"axios\";\n\nconst Character = props => {\n  const router = useRouter();\n  const {\n    character\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    title: character.name,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card col-md-5 contentCards\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        className: \"card-img-top\",\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title text-primary\",\n          children: [\"Name: \", character.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Species: \", character.species]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Gender: \", character.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), character.status == \"Alive\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text text-success\",\n          children: [\"Status: \", character.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), character.status == \"Dead\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text text-danger\",\n          children: [\"Status: \", character.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), character.status == \"unknown\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text text-secondary\",\n          children: [\"Status: \", character.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Location: \", character.location.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-primary\",\n          onClick: () => router.back(),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nCharacter.getInitialProps = async ctx => {\n  try {\n    const res = await axios.get(`${Global.url}character/${ctx.query.id}`);\n    const resultsData = res.data;\n    return {\n      character: resultsData\n    };\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};\n\nexport default Character;","map":{"version":3,"sources":["C:/Users/rober/Desktop/rickmorty/pages/characters/[id].js"],"names":["useRouter","Container","Global","axios","Character","props","router","character","name","image","species","gender","status","location","back","getInitialProps","ctx","res","get","url","query","id","resultsData","data","error"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAgBF,KAAtB;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,SAAS,CAACC,IAA5B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE;AACE,QAAA,GAAG,EAAED,SAAS,CAACE,KADjB;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,GAAG,EAAEF,SAAS,CAACC;AAHjB;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,yBAAd;AAAA,+BAA+CD,SAAS,CAACC,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,kCAAmCD,SAAS,CAACG,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,iCAAkCH,SAAS,CAACI,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIGJ,SAAS,CAACK,MAAV,IAAoB,OAApB,iBACC;AAAG,UAAA,SAAS,EAAC,wBAAb;AAAA,iCAA+CL,SAAS,CAACK,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAOGL,SAAS,CAACK,MAAV,IAAoB,MAApB,iBACC;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,iCAA8CL,SAAS,CAACK,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,EAUGL,SAAS,CAACK,MAAV,IAAoB,SAApB,iBACC;AAAG,UAAA,SAAS,EAAC,0BAAb;AAAA,iCACWL,SAAS,CAACK,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAeE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,mCAAoCL,SAAS,CAACM,QAAV,CAAmBL,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,OAAO,EAAE,MAAMF,MAAM,CAACQ,IAAP,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CApCD;;AAsCAV,SAAS,CAACW,eAAV,GAA4B,MAAOC,GAAP,IAAe;AACzC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,GAAEhB,MAAM,CAACiB,GAAI,aAAYH,GAAG,CAACI,KAAJ,CAAUC,EAAG,EAAjD,CAAlB;AACA,UAAMC,WAAW,GAAGL,GAAG,CAACM,IAAxB;AACA,WAAO;AAAEhB,MAAAA,SAAS,EAAEe;AAAb,KAAP;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACd,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;AACF,CARD;;AAUA,eAAepB,SAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport Container from \"../../components/Container\";\r\n\r\nimport Global from \"../../services/Global\";\r\nimport axios from \"axios\";\r\n\r\nconst Character = (props) => {\r\n  const router = useRouter();\r\n\r\n  const { character } = props;\r\n\r\n  return (\r\n    <Container title={character.name}>\r\n      <div className=\"card col-md-5 contentCards\">\r\n        <img\r\n          src={character.image}\r\n          className=\"card-img-top\"\r\n          alt={character.name}\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title text-primary\">Name: {character.name}</h5>\r\n          <p className=\"card-text\">Species: {character.species}</p>\r\n          <p className=\"card-text\">Gender: {character.gender}</p>\r\n          {character.status == \"Alive\" && (\r\n            <p className=\"card-text text-success\">Status: {character.status}</p>\r\n          )}\r\n          {character.status == \"Dead\" && (\r\n            <p className=\"card-text text-danger\">Status: {character.status}</p>\r\n          )}\r\n          {character.status == \"unknown\" && (\r\n            <p className=\"card-text text-secondary\">\r\n              Status: {character.status}\r\n            </p>\r\n          )}\r\n          <p className=\"card-text\">Location: {character.location.name}</p>\r\n          <div className=\"btn btn-primary\" onClick={() => router.back()}>\r\n            Back\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCharacter.getInitialProps = async (ctx) => {\r\n  try {\r\n    const res = await axios.get(`${Global.url}character/${ctx.query.id}`);\r\n    const resultsData = res.data;\r\n    return { character: resultsData };\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport default Character;\r\n"]},"metadata":{},"sourceType":"module"}