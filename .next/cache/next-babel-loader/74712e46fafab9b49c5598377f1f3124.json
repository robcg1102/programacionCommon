{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\rickmorty\\\\pages\\\\search.js\";\nimport Container from '../components/Container';\nimport Global from \"../services/Global\";\nimport axios from \"axios\";\n\nconst SearchCharacter = props => {\n  const {\n    info,\n    results\n  } = props.allres;\n  console.log(props.allres);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Holo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\nSearchCharacter.getInitialProps = async ctx => {\n  const {\n    name\n  } = ctx.query;\n\n  try {\n    if (ctx.query.page) {\n      const res = await axios.get(`${Global.url}character/?name=${name}`);\n      const resultsData = res.data;\n      return {\n        allres: resultsData\n      };\n    } else {\n      const res = await axios.get(`${Global.url}character`);\n      const resultsData = res.data;\n      return {\n        allres: resultsData\n      };\n    }\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};\n\nexport default SearchCharacter;","map":{"version":3,"sources":["C:/Users/rober/Desktop/rickmorty/pages/search.js"],"names":["Container","Global","axios","SearchCharacter","props","info","results","allres","console","log","getInitialProps","ctx","name","query","page","res","get","url","resultsData","data","error"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAE/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,KAAK,CAACG,MAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,MAAlB;AACA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CATD;;AAWAJ,eAAe,CAACO,eAAhB,GAAkC,MAAOC,GAAP,IAAe;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,KAArB;;AACA,MAAI;AACF,QAAGF,GAAG,CAACE,KAAJ,CAAUC,IAAb,EAAkB;AAChB,YAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEf,MAAM,CAACgB,GAAI,mBAAkBL,IAAK,EAA/C,CAAlB;AACA,YAAMM,WAAW,GAAGH,GAAG,CAACI,IAAxB;AACA,aAAO;AAAEZ,QAAAA,MAAM,EAAEW;AAAV,OAAP;AACD,KAJD,MAIK;AACH,YAAMH,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEf,MAAM,CAACgB,GAAI,WAAxB,CAAlB;AACA,YAAMC,WAAW,GAAGH,GAAG,CAACI,IAAxB;AACA,aAAO;AAAEZ,QAAAA,MAAM,EAAEW;AAAV,OAAP;AACD;AACF,GAVD,CAUE,OAAOE,KAAP,EAAc;AACd,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;AACF,CAfH;;AAkBA,eAAejB,eAAf","sourcesContent":["import Container from '../components/Container';\r\n\r\nimport Global from \"../services/Global\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchCharacter = (props) => {\r\n\r\n    const { info, results } = props.allres;\r\n    console.log(props.allres);\r\n    return (\r\n        <Container>\r\n            <h3>Holo</h3>\r\n        </Container>\r\n    )\r\n}\r\n\r\nSearchCharacter.getInitialProps = async (ctx) => {\r\n    const { name } = ctx.query;\r\n    try {\r\n      if(ctx.query.page){\r\n        const res = await axios.get(`${Global.url}character/?name=${name}`);\r\n        const resultsData = res.data;\r\n        return { allres: resultsData };\r\n      }else{\r\n        const res = await axios.get(`${Global.url}character`);\r\n        const resultsData = res.data;\r\n        return { allres: resultsData };\r\n      }\r\n    } catch (error) {\r\n      return { error };\r\n    }\r\n  };\r\n\r\n\r\nexport default SearchCharacter;"]},"metadata":{},"sourceType":"module"}