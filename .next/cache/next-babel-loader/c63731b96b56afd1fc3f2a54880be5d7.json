{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\rickmorty\\\\pages\\\\characters.js\",\n    _this = this;\n\nimport Container from \"../components/Container\";\nimport axios from \"axios\";\nimport Global from \"../services/Global\";\n\nvar Characters = function Characters(props) {\n  var _props$allres = props.allres,\n      info = _props$allres.info,\n      results = _props$allres.results;\n  console.log(info);\n  console.log(results);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: results.map(function (data) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"data.name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 18\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Characters;\n\nCharacters.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, resultsData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"\".concat(Global.url, \"character\"));\n\n          case 3:\n            res = _context.sent;\n            resultsData = res.data;\n            return _context.abrupt(\"return\", {\n              allres: resultsData\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["C:/Users/rober/Desktop/rickmorty/pages/characters.js"],"names":["Container","axios","Global","Characters","props","allres","info","results","console","log","map","data","getInitialProps","ctx","get","url","res","resultsData","error"],"mappings":";;;;;;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,sBACFA,KAAK,CAACC,MADJ;AAAA,MACpBC,IADoB,iBACpBA,IADoB;AAAA,MACdC,OADc,iBACdA,OADc;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,sBACE,QAAC,SAAD;AAAA,cACGA,OAAO,CAACG,GAAR,CAAY,UAAAC,IAAI,EAAE;AACf,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAZD;;KAAMR,U;;AAcNA,UAAU,CAACS,eAAX;AAAA,sEAA6B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEPZ,KAAK,CAACa,GAAN,WAAaZ,MAAM,CAACa,GAApB,eAFO;;AAAA;AAEnBC,YAAAA,GAFmB;AAGnBC,YAAAA,WAHmB,GAGLD,GAAG,CAACL,IAHC;AAAA,6CAIlB;AAAEN,cAAAA,MAAM,EAAEY;AAAV,aAJkB;;AAAA;AAAA;AAAA;AAAA,6CAMlB;AAAEC,cAAAA,KAAK;AAAP,aANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAef,UAAf","sourcesContent":["import Container from \"../components/Container\";\r\nimport axios from \"axios\";\r\n\r\nimport Global from \"../services/Global\";\r\n\r\nconst Characters = (props) => {\r\n  const { info, results } = props.allres;\r\n  console.log(info);\r\n  console.log(results);\r\n\r\n  return (\r\n    <Container>\r\n      {results.map(data=>{\r\n          return <p>data.name</p>\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nCharacters.getInitialProps = async (ctx) => {\r\n  try {\r\n    const res = await axios.get(`${Global.url}character`);\r\n    const resultsData = res.data;\r\n    return { allres: resultsData };\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport default Characters;\r\n"]},"metadata":{},"sourceType":"module"}