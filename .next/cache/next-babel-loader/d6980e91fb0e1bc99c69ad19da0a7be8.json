{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\rickmorty\\\\pages\\\\episodes\\\\[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport Container from \"../../components/Container\";\nimport Global from \"../../services/Global\";\nimport axios from \"axios\";\n\nvar Episode = function Episode() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  var _props = props,\n      episode = _props.episode;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    title: episode.name,\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"hola \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Episode, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Episode;\n\nEpisode.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, resultsData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"\".concat(Global.url, \"episode/\").concat(ctx.query.id));\n\n          case 3:\n            res = _context.sent;\n            resultsData = res.data;\n            return _context.abrupt(\"return\", {\n              episode: resultsData\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["C:/Users/rober/Desktop/rickmorty/pages/episodes/[id].js"],"names":["useRouter","Container","Global","axios","Episode","router","id","query","props","episode","name","getInitialProps","ctx","get","url","res","resultsData","data","error"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AADkB,MAEZM,EAFY,GAELD,MAAM,CAACE,KAFF,CAEZD,EAFY;AAAA,eAIEE,KAJF;AAAA,MAIVC,OAJU,UAIVA,OAJU;AAMlB,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,OAAO,CAACC,IAA1B;AAAA,2BACI;AAAA,0BAAUJ,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAXD;;GAAMF,O;UACaJ,S;;;KADbI,O;;AAaNA,OAAO,CAACO,eAAR;AAAA,sEAA0B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEFT,KAAK,CAACU,GAAN,WAAaX,MAAM,CAACY,GAApB,qBAAkCF,GAAG,CAACL,KAAJ,CAAUD,EAA5C,EAFE;;AAAA;AAEdS,YAAAA,GAFc;AAGdC,YAAAA,WAHc,GAGAD,GAAG,CAACE,IAHJ;AAAA,6CAIb;AAAER,cAAAA,OAAO,EAAEO;AAAX,aAJa;;AAAA;AAAA;AAAA;AAAA,6CAMb;AAAEE,cAAAA,KAAK;AAAP,aANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAaA,eAAed,OAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport Container from \"../../components/Container\";\r\n\r\nimport Global from \"../../services/Global\";\r\nimport axios from \"axios\";\r\n\r\nconst Episode = () => {\r\n    const router = useRouter();\r\n    let { id } = router.query;\r\n\r\n    const { episode } = props;\r\n\r\n    return (\r\n        <Container title={episode.name}>\r\n            <h2>hola {id}</h2>\r\n        </Container>\r\n    )\r\n}\r\n\r\nEpisode.getInitialProps = async (ctx) => {\r\n    try {\r\n      const res = await axios.get(`${Global.url}episode/${ctx.query.id}`);\r\n      const resultsData = res.data;\r\n      return { episode: resultsData };\r\n    } catch (error) {\r\n      return { error };\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport default Episode;"]},"metadata":{},"sourceType":"module"}