{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\rickmorty\\\\pages\\\\characters\\\\[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport Container from \"../../components/Container\";\nimport Global from \"../../services/Global\";\nimport axios from \"axios\";\n\nvar Character = function Character(props) {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n  var character = props.character;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    title: character.name,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card col-md-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        className: \"card-img-top\",\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: [\"Name: \", character.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Species: \", character.species]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Gender: \", character.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-primary\",\n          onClick: function onClick() {\n            return router.back();\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Character, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Character;\n\nCharacter.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, resultsData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"\".concat(Global.url, \"character/\").concat(ctx.query.id));\n\n          case 3:\n            res = _context.sent;\n            resultsData = res.data;\n            return _context.abrupt(\"return\", {\n              character: resultsData\n            });\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["C:/Users/rober/Desktop/rickmorty/pages/characters/[id].js"],"names":["useRouter","Container","Global","axios","Character","props","router","id","query","character","name","image","species","gender","back","getInitialProps","ctx","get","url","res","resultsData","data","error"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAC3B,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAD2B,MAErBO,EAFqB,GAEdD,MAAM,CAACE,KAFO,CAErBD,EAFqB;AAAA,MAInBE,SAJmB,GAILJ,KAJK,CAInBI,SAJmB;AAM3B,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,SAAS,CAACC,IAA5B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAED,SAAS,CAACE,KAApB;AAA2B,QAAA,SAAS,EAAC,cAArC;AAAoD,QAAA,GAAG,EAAEF,SAAS,CAACC;AAAnE;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,+BAAkCD,SAAS,CAACC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,kCAAmCD,SAAS,CAACG,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,iCAAkCH,SAAS,CAACI,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,OAAO,EAAE;AAAA,mBAAMP,MAAM,CAACQ,IAAP,EAAN;AAAA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAaD,CAnBD;;GAAMV,S;UACWJ,S;;;KADXI,S;;AAqBNA,SAAS,CAACW,eAAV;AAAA,sEAA4B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAENb,KAAK,CAACc,GAAN,WAAaf,MAAM,CAACgB,GAApB,uBAAoCF,GAAG,CAACR,KAAJ,CAAUD,EAA9C,EAFM;;AAAA;AAElBY,YAAAA,GAFkB;AAGlBC,YAAAA,WAHkB,GAGJD,GAAG,CAACE,IAHA;AAAA,6CAIjB;AAAEZ,cAAAA,SAAS,EAAEW;AAAb,aAJiB;;AAAA;AAAA;AAAA;AAAA,6CAMjB;AAAEE,cAAAA,KAAK;AAAP,aANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAelB,SAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport Container from \"../../components/Container\";\r\n\r\nimport Global from \"../../services/Global\";\r\nimport axios from \"axios\";\r\n\r\nconst Character = (props) => {\r\n  const router = useRouter();\r\n  let { id } = router.query;\r\n\r\n  const { character } = props;\r\n\r\n  return (\r\n    <Container title={character.name}>\r\n      <div className=\"card col-md-5\">\r\n        <img src={character.image} className=\"card-img-top\" alt={character.name} />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Name: {character.name}</h5>\r\n          <p className=\"card-text\">Species: {character.species}</p>\r\n          <p className=\"card-text\">Gender: {character.gender}</p>\r\n          <div className=\"btn btn-primary\" onClick={() => router.back()}>Back</div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCharacter.getInitialProps = async (ctx) => {\r\n  try {\r\n    const res = await axios.get(`${Global.url}character/${ctx.query.id}`);\r\n    const resultsData = res.data;\r\n    return { character: resultsData };\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport default Character;\r\n"]},"metadata":{},"sourceType":"module"}