{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\rickmorty\\\\pages\\\\characters.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Container from \"../components/Container\";\nimport Cards from '../components/Cards';\nimport Pagination from '../components/Pagination';\nimport { useRouter } from \"next/router\";\nimport Global from \"../services/Global\";\nimport axios from \"axios\";\n\nvar Characters = function Characters(props) {\n  _s();\n\n  var _props$allres = props.allres,\n      info = _props$allres.info,\n      results = _props$allres.results;\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    title: \"Characters\",\n    children: [/*#__PURE__*/_jsxDEV(Cards, {\n      results: results,\n      route: \"characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Pagination, {\n      next: info.next,\n      prev: info.prev\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Characters, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Characters;\n\nCharacters.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var page, res, resultsData, _res, _resultsData;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = ctx.query.page;\n            console.log(page);\n            _context.prev = 2;\n\n            if (!ctx.query.page) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 6;\n            return axios.get(\"\".concat(Global.url, \"character?page=\").concat(page));\n\n          case 6:\n            res = _context.sent;\n            resultsData = res.data;\n            return _context.abrupt(\"return\", {\n              allres: resultsData\n            });\n\n          case 11:\n            _context.next = 13;\n            return axios.get(\"\".concat(Global.url, \"character\"));\n\n          case 13:\n            _res = _context.sent;\n            _resultsData = _res.data;\n            return _context.abrupt(\"return\", {\n              allres: _resultsData\n            });\n\n          case 16:\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 18]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["C:/Users/rober/Desktop/rickmorty/pages/characters.js"],"names":["Container","Cards","Pagination","useRouter","Global","axios","Characters","props","allres","info","results","router","next","prev","getInitialProps","ctx","page","query","console","log","get","url","res","resultsData","data","error"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAAA,sBACFA,KAAK,CAACC,MADJ;AAAA,MACpBC,IADoB,iBACpBA,IADoB;AAAA,MACdC,OADc,iBACdA,OADc;AAE5B,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAC,YAAjB;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEO,OAAhB;AAAyB,MAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAI,CAACG,IAAvB;AAA6B,MAAA,IAAI,EAAEH,IAAI,CAACI;AAAxC;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAVD;;GAAMP,U;UAEWH,S;;;KAFXG,U;;AAYNA,UAAU,CAACQ,eAAX;AAAA,sEAA6B,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,IADmB,GACVD,GAAG,CAACE,KADM,CACnBD,IADmB;AAE3BE,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAF2B;;AAAA,iBAItBD,GAAG,CAACE,KAAJ,CAAUD,IAJY;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKLX,KAAK,CAACe,GAAN,WAAahB,MAAM,CAACiB,GAApB,4BAAyCL,IAAzC,EALK;;AAAA;AAKjBM,YAAAA,GALiB;AAMjBC,YAAAA,WANiB,GAMHD,GAAG,CAACE,IAND;AAAA,6CAOhB;AAAEhB,cAAAA,MAAM,EAAEe;AAAV,aAPgB;;AAAA;AAAA;AAAA,mBASLlB,KAAK,CAACe,GAAN,WAAahB,MAAM,CAACiB,GAApB,eATK;;AAAA;AASjBC,YAAAA,IATiB;AAUjBC,YAAAA,YAViB,GAUHD,IAAG,CAACE,IAVD;AAAA,6CAWhB;AAAEhB,cAAAA,MAAM,EAAEe;AAAV,aAXgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAclB;AAAEE,cAAAA,KAAK;AAAP,aAdkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAkBA,eAAenB,UAAf","sourcesContent":["import Container from \"../components/Container\";\r\nimport Cards from '../components/Cards';\r\nimport Pagination from '../components/Pagination';\r\nimport { useRouter } from \"next/router\";\r\n\r\nimport Global from \"../services/Global\";\r\nimport axios from \"axios\";\r\n\r\nconst Characters = (props) => {\r\n  const { info, results } = props.allres;\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <Container title=\"Characters\">\r\n      <Cards results={results} route=\"characters\"/>\r\n      <Pagination next={info.next} prev={info.prev}/>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCharacters.getInitialProps = async (ctx) => {\r\n  const { page } = ctx.query\r\n  console.log(page);\r\n  try {\r\n    if(ctx.query.page){\r\n      const res = await axios.get(`${Global.url}character?page=${page}`);\r\n      const resultsData = res.data;\r\n      return { allres: resultsData };\r\n    }else{\r\n      const res = await axios.get(`${Global.url}character`);\r\n      const resultsData = res.data;\r\n      return { allres: resultsData };\r\n    }\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport default Characters;\r\n"]},"metadata":{},"sourceType":"module"}