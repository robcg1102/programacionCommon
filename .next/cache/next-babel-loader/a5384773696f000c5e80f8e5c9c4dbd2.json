{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\rickmorty\\\\pages\\\\search.js\";\nimport Container from \"../components/Container\";\nimport Cards from '../components/Cards';\nimport Global from \"../services/Global\";\nimport axios from \"axios\";\n\nconst SearchCharacter = props => {\n  console.log(props.query);\n\n  if (props.allres) {\n    var {\n      info,\n      results\n    } = props.allres;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Cards, {\n      results: results,\n      route: \"characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nSearchCharacter.getInitialProps = async ctx => {\n  const {\n    name\n  } = ctx.query;\n\n  try {\n    const res = await axios.get(`${Global.url}character/?name=${name}`);\n    const resultsData = res.data;\n    return {\n      allres: resultsData\n    };\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};\n\nexport default SearchCharacter;","map":{"version":3,"sources":["C:/Users/rober/Desktop/rickmorty/pages/search.js"],"names":["Container","Cards","Global","axios","SearchCharacter","props","console","log","query","allres","info","results","getInitialProps","ctx","name","res","get","url","resultsData","data","error"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;;AACF,MAAIH,KAAK,CAACI,MAAV,EAAkB;AAChB,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoBN,KAAK,CAACI,MAA9B;AACD;;AACD,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEE,OAAhB;AAAyB,MAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;;AAYAP,eAAe,CAACQ,eAAhB,GAAkC,MAAOC,GAAP,IAAe;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACL,KAArB;;AACA,MAAI;AACA,UAAMO,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,GAAEd,MAAM,CAACe,GAAI,mBAAkBH,IAAK,EAA/C,CAAlB;AACA,UAAMI,WAAW,GAAGH,GAAG,CAACI,IAAxB;AACA,WAAO;AAAEV,MAAAA,MAAM,EAAES;AAAV,KAAP;AAEH,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;AACF,CAVD;;AAYA,eAAehB,eAAf","sourcesContent":["import Container from \"../components/Container\";\r\nimport Cards from '../components/Cards';\r\n\r\nimport Global from \"../services/Global\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchCharacter = (props) => {\r\n    console.log(props.query)\r\n  if (props.allres) {\r\n    var { info, results } = props.allres;\r\n  }\r\n  return (\r\n    <Container>\r\n      <Cards results={results} route=\"characters\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nSearchCharacter.getInitialProps = async (ctx) => {\r\n  const { name } = ctx.query;\r\n  try {\r\n      const res = await axios.get(`${Global.url}character/?name=${name}`);\r\n      const resultsData = res.data;\r\n      return { allres: resultsData };\r\n    \r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport default SearchCharacter;\r\n"]},"metadata":{},"sourceType":"module"}