{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Container from \"../components/Container\";\nimport Cards from \"../components/Cards\";\nimport Pagination from \"../components/Pagination\";\nimport Global from \"../services/Global\";\nimport axios from \"axios\";\n\nvar Episodes = function Episodes(props) {\n  var _props$allres = props.allres,\n      info = _props$allres.info,\n      results = _props$allres.results;\n  return /*#__PURE__*/_jsxs(Container, {\n    title: \"Episodes\",\n    children: [/*#__PURE__*/_jsx(Cards, {\n      results: results,\n      route: \"episodes\"\n    }), /*#__PURE__*/_jsx(Pagination, {\n      next: info.next,\n      prev: info.prev,\n      route: \"episodes\"\n    })]\n  });\n};\n\nEpisodes.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var page, res, resultsData, _res, _resultsData;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = ctx.query.page;\n            _context.prev = 1;\n\n            if (!ctx.query.page) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 5;\n            return axios.get(\"\".concat(Global.url, \"episode?page=\").concat(page));\n\n          case 5:\n            res = _context.sent;\n            resultsData = res.data;\n            return _context.abrupt(\"return\", {\n              allres: resultsData\n            });\n\n          case 10:\n            _context.next = 12;\n            return axios.get(\"\".concat(Global.url, \"episode\"));\n\n          case 12:\n            _res = _context.sent;\n            _resultsData = _res.data;\n            return _context.abrupt(\"return\", {\n              allres: _resultsData\n            });\n\n          case 15:\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 17]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Episodes;","map":null,"metadata":{},"sourceType":"module"}